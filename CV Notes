http://www.ipo.spb.ru/journal/content/1991/Описание%20дескриптора%20осуществляющего%20категоризацию%20изображений%20с%20учетом%20геометрических%20структур%20по%20всем%20цветам.pdf
#http://d33.infospace.ru/d33_conf/sb2015t1/131-144.pdf
№https://libeldoc.bsuir.by/bitstream/123456789/25835/1/k_Lukashevich.pdf
#https://disser.spbu.ru/disser2/disser/Batyukov_Alexander_disser.pdf
https://newtechaudit.ru/obnaruzhenie-pryamyh/ обнаружение линий алгоритм Хафа
https://habr.com/ru/companies/otus/articles/745946/ Пример Хафа Питон
https://habr.com/ru/articles/208090/ статья 


public class SawingIntervalValidator : AbstractValidator<SawingInterval>
{
    public SawingIntervalValidator()
    {
        this.RuleFor(i => i.SawedCoreTo)
            .Must((i, to) => to == null || to > i.SawedCoreFrom)
            .WithMessage("Верх должен быть меньше низа интервала распиловки.")
            .WithState(m => new ModelState(nameof(m.SawedCoreTo), PropTypes.Body));

        this.RuleFor(i => i.SawedCoreFrom)
            .Must((i, from) => from == null || from < i.SawedCoreTo)
            .WithMessage("Верх должен быть меньше низа интервала распиловки.")
            .WithState(m => new ModelState(nameof(m.SawedCoreFrom), PropTypes.Body));
    }
}

[IgnoreRegistrationValidator]
public class CoreSawingVariableModelValidator : AbstractValidator<CoreSawingVariableModel>
{
    public CoreSawingVariableModelValidator(decimal coreOut)
    {
        var itemValidator = new SawingIntervalValidator();

        this.RuleFor(m => m.SawingIntervals)
            .Must(si => NotIntersects(si))
            .WithMessage("Промежутки распиловки не должны пересекаться.")
            .WithState(m => new ModelState(nameof(m.SawingIntervals), PropTypes.Body));

        this.RuleForEach(m => m.SawingIntervals)
            .SetValidator(itemValidator);
