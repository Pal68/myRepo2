http://www.ipo.spb.ru/journal/content/1991/Описание%20дескриптора%20осуществляющего%20категоризацию%20изображений%20с%20учетом%20геометрических%20структур%20по%20всем%20цветам.pdf
#http://d33.infospace.ru/d33_conf/sb2015t1/131-144.pdf
№https://libeldoc.bsuir.by/bitstream/123456789/25835/1/k_Lukashevich.pdf
#https://disser.spbu.ru/disser2/disser/Batyukov_Alexander_disser.pdf
https://newtechaudit.ru/obnaruzhenie-pryamyh/ обнаружение линий алгоритм Хафа
https://habr.com/ru/companies/otus/articles/745946/ Пример Хафа Питон
https://habr.com/ru/articles/208090/ статья 


namespace Lims.Core.Tests.UseCases.Results.CoreSawing.V1;

using Xunit;
using Lims.Core.Tests.UseCases.Fixtures;
using FluentValidation.TestHelper;
using System;
using Lims.Core.UseCases.Results.CoreSawing.V1.Validators;
using Lims.Core.UseCases.Results.CoreSawing.V1.Models;

[Collection(nameof(ObjectCollection))]
public class CoreSawingVariableModelValidatorTests
{
    private const decimal CoreOut = 10;
    private readonly CoreSawingVariableModelValidator validator;

    public CoreSawingVariableModelValidatorTests()
    {
        validator = new CoreSawingVariableModelValidator(CoreOut);
    }

    
    [Fact]
    public async void Validate_should_return_expected_error_when_top_sawing_interval_greater_bottom()
    {
        // Arrange
        var expectedErrorMessage = "Верх должен быть меньше низа интервала распиловки.";
        var variableModel = new CoreSawingVariableModel();
        var sawingInterval = new SawingInterval {
            SawedCoreFrom = 5,
            SawedCoreTo  = 4,
        };
        variableModel.SawingIntervals.Add(sawingInterval);

        // Act
        var result = await validator.TestValidateAsync(variableModel);
    
        // Assert
        result.ShouldHaveValidationErrorFor(c => variableModel.SawingIntervals[0].SawedCoreTo)
              .WithErrorMessage(expectedErrorMessage);
    }

}
